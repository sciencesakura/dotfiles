set autoindent
set background=dark
set encoding=utf-8
set expandtab
set ignorecase
set laststatus=2
set number
set shiftwidth=2
set smartcase
set splitbelow
set tabstop=2
if has('clipboard')
  if has('unnamedplus')
    set clipboard^=unnamedplus
  else
    set clipboard^=unnamed
  endif
endif
if has('cmdline_info')
  set ruler
endif
if has('extra_search')
  set hlsearch
  set incsearch
endif
if has('mouse')
  set mouse=a
endif
if has('smartindent')
  set smartindent
endif
if has('syntax')
  set cursorline
  set spelllang=en,cjk
endif

nnoremap <silent> <Esc><Esc> :nohlsearch<CR>
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> tt :tabnew<CR>
nnoremap <silent> [t :tabprevious<CR>
nnoremap <silent> ]t :tabnext<CR>

if v:version >= 800
  set belloff=all
  if has('termguicolors') && $COLORTERM == 'truecolor'
    set termguicolors
  endif

  if $TERM !~ '^xterm'
    let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
    let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
  endif
endif

if v:version >= 801
  if has('terminal')
    set termwinsize=16x0

    nnoremap <silent> tm :terminal<CR>
  endif
endif

if v:version >= 900
  if has('syntax')
    set spelloptions=camel
  endif
endif

let g:c_syntax_for_h = 1

"fzf
if isdirectory('/usr/share/doc/fzf/examples')
  set runtimepath^=/usr/share/doc/fzf/examples
elseif isdirectory(expand('$HOMEBREW_PREFIX/opt/fzf'))
  execute 'set runtimepath^=' . expand('$HOMEBREW_PREFIX/opt/fzf')
endif

"dein Scripts-----------------------------
let s:DEIN_HOME = expand('$HOME/.cache/dein')
let s:DEIN_REPODIR = s:DEIN_HOME . '/repos/github.com/Shougo/dein.vim'

if isdirectory(s:DEIN_REPODIR)
  execute 'set runtimepath^=' . s:DEIN_REPODIR

  if dein#load_state(s:DEIN_HOME)
    call dein#begin(s:DEIN_HOME)
    call dein#load_toml(expand('$HOME/.vim/dein.toml'))
    if filereadable(expand('$HOME/.vim/dein.local.toml'))
      call dein#load_toml(expand('$HOME/.vim/dein.local.toml'))
    endif
    call dein#end()
    call dein#save_state()
  endif

  " If you want to install not installed plugins on startup.
  if dein#check_install()
    call dein#install()
  endif
endif
"End dein Scripts-------------------------

filetype plugin indent on
syntax enable

"vim-lsp
function! s:on_lsp_buffer_enabled() abort
  nmap <buffer> gd <plug>(lsp-definition)
  nmap <buffer> gs <plug>(lsp-document-symbol-search)
  nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
  nmap <buffer> gr <plug>(lsp-references)
  nmap <buffer> gi <plug>(lsp-implementation)
  nmap <buffer> gt <plug>(lsp-type-definition)
  nmap <buffer> <F2> <plug>(lsp-rename)
  nmap <buffer> [g <plug>(lsp-previous-diagnostic)
  nmap <buffer> ]g <plug>(lsp-next-diagnostic)
  nmap <buffer> K <plug>(lsp-hover)
endfunction

augroup lsp_install
  autocmd!
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
"END vim-lsp
